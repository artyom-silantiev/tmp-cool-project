version: '3.9'

services:
  traefik:
    container_name: 'tmp-cool-traefik'
    image: 'traefik:v2.9'
    command:
      #- "--log.level=DEBUG"
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  portainer:
    container_name: tmp-cool-portainer
    image: portainer/portainer-ce:2.5.0-alpine
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`portainer.localhost`)'
      - 'traefik.http.routers.portainer.entrypoints=web'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
      - 'traefik.http.routers.portainer.service=portainer'

  db:
    container_name: tmp-cool-db
    image: 'postgres:14.6'
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db_pg_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: 10m
        max-file: '3'
    ports:
      - '127.0.0.1:5432:5432'

  redis:
    container_name: tmp-cool-redis
    image: redis
    ports:
      - '127.0.0.1:6379:6379'
    restart: always

  backup_app:
    container_name: tmp-cool-backup_app
    image: tmp-cool-backup_app
    build:
      context: backup_app
      dockerfile: ./Dockerfile
    environment:
      - NODE_HOST=tmp-cool-backup_app
      - DIR_DATA_FOR_BACKUP=/appdata/data
      - DIR_BACKUPS=/appdata/backups
      - POSTGRES_HOST=tmp-cool-db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./backup_app/src:/usr/src/app/src
      - ./backup_app/.env:/usr/src/app/.env
      - app_data:/appdata/data
      - backups_data:/appdata/backups
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.backend.loadbalancer.server.port=3000'
      - 'traefik.http.routers.backend.rule=Host(`backup.localhost`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.backend.entrypoints=web'
      - 'traefik.http.routers.backend.service=backend'
    command: 'yarn dev'

  backend:
    container_name: tmp-cool-backend
    image: tmp-cool-backend
    build:
      context: backend
      dockerfile: ./Dockerfile
    environment:
      - NODE_HOST=tmp-cool-backend
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@tmp-cool-db:5432/${POSTGRES_DB}?schema=public
      - REDIS_HOST=tmp-cool-redis
      - DIR_DATA=/appdata/data
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/.env:/usr/src/app/.env
      - app_data:/appdata/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.bakupapp.loadbalancer.server.port=3000'
      - 'traefik.http.routers.bakupapp.rule=Host(`site.localhost`) && PathPrefix(`/api`, `/swagger`, `/local_files`)'
      - 'traefik.http.routers.bakupapp.entrypoints=web'
      - 'traefik.http.routers.bakupapp.service=bakupapp'

  site:
    container_name: tmp-cool-site
    image: tmp-cool-site
    build:
      context: frontend
      dockerfile: ./Dockerfile
    environment:
      - VUE_BASE_URL_API=http://tmp-cool-backend:3000/api
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.sitessr.loadbalancer.server.port=3300'
      - 'traefik.http.routers.sitessr.rule=Host(`site.localhost`)'
      - 'traefik.http.routers.sitessr.entrypoints=web'
      - 'traefik.http.routers.sitessr.service=sitessr'

volumes:
  db_pg_data:
  app_data:
  backups_data:
